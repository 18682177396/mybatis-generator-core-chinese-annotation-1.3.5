<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="march.mappers.OrderInfoDAO">
  <resultMap id="BaseResultMap" type="march.entity.OrderInfo">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="nums" jdbcType="INTEGER" property="nums" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_id, uid, nums, state, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="march.entity.OrderInfoCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_info
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_info
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="march.entity.OrderInfoCriteria">
    delete from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="march.entity.OrderInfo">
    insert into order_info (order_id, uid, nums, 
      state, create_time, update_time
      )
    values (#{orderId,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{nums,jdbcType=INTEGER}, 
      #{state,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="march.entity.OrderInfo">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="nums != null">
        nums,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="nums != null">
        #{nums,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into order_info (order_id, uid, nums, 
      state, create_time, update_time
      )
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.orderId,jdbcType=INTEGER}, #{item.uid,jdbcType=INTEGER}, #{item.nums,jdbcType=INTEGER}, 
        #{item.state,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into order_info
    (order_id, uid, nums, state, create_time, update_time)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.orderId != null">
          #{item.orderId,jdbcType=INTEGER},
        </if>
        <if test="item.orderId == null">
          NULL,
        </if>
        <if test="item.uid != null">
          #{item.uid,jdbcType=INTEGER},
        </if>
        <if test="item.uid == null">
          NULL,
        </if>
        <if test="item.nums != null">
          #{item.nums,jdbcType=INTEGER},
        </if>
        <if test="item.nums == null">
          NULL,
        </if>
        <if test="item.state != null">
          #{item.state,jdbcType=INTEGER},
        </if>
        <if test="item.state == null">
          NULL,
        </if>
        <if test="item.createTime != null">
          #{item.createTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.createTime == null">
          NULL,
        </if>
        <if test="item.updateTime != null">
          #{item.updateTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.updateTime == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <select id="countByExample" parameterType="march.entity.OrderInfoCriteria" resultType="java.lang.Long">
    select count(*) from order_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_info
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.uid != null">
        uid = #{record.uid,jdbcType=INTEGER},
      </if>
      <if test="record.nums != null">
        nums = #{record.nums,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_info
    set order_id = #{record.orderId,jdbcType=INTEGER},
      uid = #{record.uid,jdbcType=INTEGER},
      nums = #{record.nums,jdbcType=INTEGER},
      state = #{record.state,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="march.entity.OrderInfo">
    update order_info
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="nums != null">
        nums = #{nums,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="march.entity.OrderInfo">
    update order_info
    set uid = #{uid,jdbcType=INTEGER},
      nums = #{nums,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update order_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="uid =case order_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.orderId} then #{item.uid}
        </foreach>
      </trim>
      <trim prefix="nums =case order_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.orderId} then #{item.nums}
        </foreach>
      </trim>
      <trim prefix="state =case order_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.orderId} then #{item.state}
        </foreach>
      </trim>
      <trim prefix="create_time =case order_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.orderId} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="update_time =case order_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.orderId} then #{item.updateTime}
        </foreach>
      </trim>
    </trim>
    where order_id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.orderId} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update order_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="uid =case order_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.uid != null ">
            when  #{item.orderId} then #{item.uid}
          </if>
          <if test="item.uid == null ">
            when  #{item.orderId} then order_info.uid
          </if>
        </foreach>
      </trim>
      <trim prefix="nums =case order_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.nums != null ">
            when  #{item.orderId} then #{item.nums}
          </if>
          <if test="item.nums == null ">
            when  #{item.orderId} then order_info.nums
          </if>
        </foreach>
      </trim>
      <trim prefix="state =case order_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.state != null ">
            when  #{item.orderId} then #{item.state}
          </if>
          <if test="item.state == null ">
            when  #{item.orderId} then order_info.state
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time =case order_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.orderId} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.orderId} then order_info.create_time
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time =case order_id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.updateTime != null ">
            when  #{item.orderId} then #{item.updateTime}
          </if>
          <if test="item.updateTime == null ">
            when  #{item.orderId} then order_info.update_time
          </if>
        </foreach>
      </trim>
    </trim>
    where order_id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.orderId} 
    </foreach>
  </update>
  <update id="updateBatchByExample" parameterType="map">
    update order_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="uid =case order_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.orderId} then #{item.uid}
        </foreach>
      </trim>
      <trim prefix="nums =case order_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.orderId} then #{item.nums}
        </foreach>
      </trim>
      <trim prefix="state =case order_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.orderId} then #{item.state}
        </foreach>
      </trim>
      <trim prefix="create_time =case order_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.orderId} then #{item.createTime}
        </foreach>
      </trim>
      <trim prefix="update_time =case order_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.orderId} then #{item.updateTime}
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatchByExampleSelective" parameterType="map">
    update order_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="uid =case order_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.uid != null ">
            when  #{item.orderId} then #{item.uid}
          </if>
          <if test="item.uid == null ">
            when  #{item.orderId} then order_info.uid
          </if>
        </foreach>
      </trim>
      <trim prefix="nums =case order_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.nums != null ">
            when  #{item.orderId} then #{item.nums}
          </if>
          <if test="item.nums == null ">
            when  #{item.orderId} then order_info.nums
          </if>
        </foreach>
      </trim>
      <trim prefix="state =case order_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.state != null ">
            when  #{item.orderId} then #{item.state}
          </if>
          <if test="item.state == null ">
            when  #{item.orderId} then order_info.state
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time =case order_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.createTime != null ">
            when  #{item.orderId} then #{item.createTime}
          </if>
          <if test="item.createTime == null ">
            when  #{item.orderId} then order_info.create_time
          </if>
        </foreach>
      </trim>
      <trim prefix="update_time =case order_id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.updateTime != null ">
            when  #{item.orderId} then #{item.updateTime}
          </if>
          <if test="item.updateTime == null ">
            when  #{item.orderId} then order_info.update_time
          </if>
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>